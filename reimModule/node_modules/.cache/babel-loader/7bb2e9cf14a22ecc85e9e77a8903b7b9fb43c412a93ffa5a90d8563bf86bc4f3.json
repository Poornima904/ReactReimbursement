{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Container,Box,Toolbar,Button,Typography,TextField}from\"@material-ui/core\";import{DataGrid}from\"@material-ui/data-grid\";import{useHistory}from\"react-router-dom\";// Import useHistory for navigation\nimport{getTableData,getTableCount}from\"api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const columns=[{field:\"reimbursmentId\",headerName:\"Reimbursment ID\",width:250},{field:\"reimbursementDate\",headerName:\"Reimbursement Date\",flex:1},{field:\"totalAmount\",headerName:\"Total Amount\",flex:1}];const PAGE_SIZE=15;export default function MasterPage(){const history=useHistory();// Initialize useHistory\nconst[items,setItems]=useState([]);const[loading,setLoading]=useState(false);const[rowCount,setRowCount]=useState(0);// Filter state\nconst[filterValues,setFilterValues]=useState({reimbursmentId:'',reimbursementDate:'',totalAmount:''});const loadData=async function(isFirstLoad){let skip=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;let filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};try{setItems([]);setLoading(true);if(isFirstLoad){const count=await getTableCount();setRowCount(count);}const _items=await getTableData({$top:PAGE_SIZE,$skip:skip,...filters// Add filters to the request\n});const itemsWithIds=_items.map((item,index)=>{item.id=index+skip;// Ensure unique IDs across pages\nreturn item;});setItems(itemsWithIds);}finally{setLoading(false);}};const handlePageChanged=_ref=>{let{page}=_ref;loadData(false,page*PAGE_SIZE,filterValues);// Pass current filters\n};const handleCreate=()=>{console.log(\"Add button clicked\");};const handleRefresh=()=>{loadData(true,0,filterValues);// Reload the first page with current filters\n};const handleFilterChange=e=>{const{name,value}=e.target;setFilterValues({...filterValues,[name]:value});};const handleApplyFilter=()=>{loadData(true,0,filterValues);// Reload the first page with new filters\n};const handleRowClick=params=>{// Navigate to the object page using the reimbursmentId as a parameter\nhistory.push(`/object/${params.row.reimbursmentId}`);};useEffect(()=>{loadData(true);},[]);return/*#__PURE__*/_jsxs(Container,{disableGutters:true,children:[/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Toolbar,{}),/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(TextField,{label:\"Reimbursment ID\",variant:\"outlined\",name:\"reimbursmentId\",value:filterValues.reimbursmentId,onChange:handleFilterChange,style:{marginRight:'8px'}}),/*#__PURE__*/_jsx(TextField,{label:\"Reimbursement Date\",variant:\"outlined\",name:\"reimbursementDate\",type:\"date\",value:filterValues.reimbursementDate,onChange:handleFilterChange,InputLabelProps:{shrink:true},style:{marginRight:'8px'}}),/*#__PURE__*/_jsx(TextField,{label:\"Total Amount\",variant:\"outlined\",name:\"totalAmount\",value:filterValues.totalAmount,onChange:handleFilterChange,style:{marginRight:'8px'}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleApplyFilter,children:\"Apply Filters\"})]})]}),/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",style:{flex:1},children:\"Reimbursement Records\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleCreate,children:\"Create\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",onClick:handleRefresh,style:{marginLeft:'8px'},children:\"Refresh\"})]}),/*#__PURE__*/_jsx(Box,{height:\"80vh\",py:5,children:/*#__PURE__*/_jsx(DataGrid,{loading:loading,rows:items,columns:columns,pageSize:PAGE_SIZE,paginationMode:\"server\",rowCount:rowCount,onPageChange:handlePageChanged,onRowClick:handleRowClick// Add the onRowClick prop\n})})]});}","map":{"version":3,"names":["React","useEffect","useState","Container","Box","Toolbar","Button","Typography","TextField","DataGrid","useHistory","getTableData","getTableCount","jsx","_jsx","jsxs","_jsxs","columns","field","headerName","width","flex","PAGE_SIZE","MasterPage","history","items","setItems","loading","setLoading","rowCount","setRowCount","filterValues","setFilterValues","reimbursmentId","reimbursementDate","totalAmount","loadData","isFirstLoad","skip","arguments","length","undefined","filters","count","_items","$top","$skip","itemsWithIds","map","item","index","id","handlePageChanged","_ref","page","handleCreate","console","log","handleRefresh","handleFilterChange","e","name","value","target","handleApplyFilter","handleRowClick","params","push","row","disableGutters","children","mb","label","variant","onChange","style","marginRight","type","InputLabelProps","shrink","color","onClick","marginLeft","height","py","rows","pageSize","paginationMode","onPageChange","onRowClick"],"sources":["/home/user/projects/ReactReimbursement/reimModule/src/pages/MasterPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n\nimport { Container, Box, Toolbar, Button, Typography, TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { useHistory } from \"react-router-dom\"; // Import useHistory for navigation\nimport { getTableData, getTableCount } from \"api\";\n\nconst columns = [\n  { field: \"reimbursmentId\", headerName: \"Reimbursment ID\", width: 250 },\n  { field: \"reimbursementDate\", headerName: \"Reimbursement Date\", flex: 1 },\n  { field: \"totalAmount\", headerName: \"Total Amount\", flex: 1 },\n];\n\nconst PAGE_SIZE = 15;\n\nexport default function MasterPage() {\n  const history = useHistory(); // Initialize useHistory\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [rowCount, setRowCount] = useState(0);\n  \n  // Filter state\n  const [filterValues, setFilterValues] = useState({\n    reimbursmentId: '',\n    reimbursementDate: '',\n    totalAmount: ''\n  });\n\n  const loadData = async (isFirstLoad, skip = 0, filters = {}) => {\n    try {\n      setItems([]);\n      setLoading(true);\n\n      if (isFirstLoad) {\n        const count = await getTableCount();\n        setRowCount(count);\n      }\n\n      const _items = await getTableData({\n        $top: PAGE_SIZE,\n        $skip: skip,\n        ...filters // Add filters to the request\n      });\n      const itemsWithIds = _items.map((item, index) => {\n        item.id = index + skip; // Ensure unique IDs across pages\n        return item;\n      });\n      setItems(itemsWithIds);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChanged = ({ page }) => {\n    loadData(false, page * PAGE_SIZE, filterValues); // Pass current filters\n  };\n\n  const handleCreate = () => {\n    console.log(\"Add button clicked\");\n  };\n\n  const handleRefresh = () => {\n    loadData(true, 0, filterValues); // Reload the first page with current filters\n  };\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilterValues({\n      ...filterValues,\n      [name]: value,\n    });\n  };\n\n  const handleApplyFilter = () => {\n    loadData(true, 0, filterValues); // Reload the first page with new filters\n  };\n\n  const handleRowClick = (params) => {\n    // Navigate to the object page using the reimbursmentId as a parameter\n    history.push(`/object/${params.row.reimbursmentId}`);\n  };\n\n  useEffect(() => {\n    loadData(true);\n  }, []);\n\n  return (\n    <Container disableGutters>\n      <Box mb={2}>\n        <Toolbar>\n        </Toolbar>\n        {/* Filter Bar */}\n        <Toolbar>\n          <TextField\n            label=\"Reimbursment ID\"\n            variant=\"outlined\"\n            name=\"reimbursmentId\"\n            value={filterValues.reimbursmentId}\n            onChange={handleFilterChange}\n            style={{ marginRight: '8px' }}\n          />\n          <TextField\n            label=\"Reimbursement Date\"\n            variant=\"outlined\"\n            name=\"reimbursementDate\"\n            type=\"date\"\n            value={filterValues.reimbursementDate}\n            onChange={handleFilterChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            style={{ marginRight: '8px' }}\n          />\n          <TextField\n            label=\"Total Amount\"\n            variant=\"outlined\"\n            name=\"totalAmount\"\n            value={filterValues.totalAmount}\n            onChange={handleFilterChange}\n            style={{ marginRight: '8px' }}\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={handleApplyFilter}>\n            Apply Filters\n          </Button>\n        </Toolbar>\n      </Box>\n      <Toolbar>\n        <Typography variant=\"h6\" style={{ flex: 1 }}>\n          Reimbursement Records\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleCreate}>\n          Create\n        </Button>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleRefresh} style={{ marginLeft: '8px' }}>\n          Refresh\n        </Button>\n      </Toolbar>\n      <Box height=\"80vh\" py={5}>\n        <DataGrid\n          loading={loading}\n          rows={items}\n          columns={columns}\n          pageSize={PAGE_SIZE}\n          paginationMode=\"server\"\n          rowCount={rowCount}\n          onPageChange={handlePageChanged}\n          onRowClick={handleRowClick} // Add the onRowClick prop\n        />\n      </Box>\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}