{"ast":null,"code":"import React,{useState}from\"react\";import{Button,Box,Typography,Table,TableHead,TableBody,TableRow,TableCell,Paper}from\"@material-ui/core\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Attachments=()=>{const[files,setFiles]=useState([]);const handleFileUpload=event=>{const file=event.target.files[0];if(file){// Add the new file to the files array\nsetFiles([...files,{name:file.name,size:file.size,type:file.type}]);}};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(\"input\",{accept:\"*/*\",style:{display:\"none\"},id:\"file-upload\",type:\"file\",onChange:handleFileUpload}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload\",children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",component:\"span\",children:\"Upload File\"})}),files.length>0&&/*#__PURE__*/_jsxs(Paper,{style:{marginTop:\"16px\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",style:{padding:\"16px\"},children:\"Uploaded Files\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"File Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"File Size (bytes)\"}),/*#__PURE__*/_jsx(TableCell,{children:\"File Type\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:files.map((file,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:file.name}),/*#__PURE__*/_jsx(TableCell,{children:file.size}),/*#__PURE__*/_jsx(TableCell,{children:file.type})]},index))})]})]})]});};export default Attachments;","map":{"version":3,"names":["React","useState","Button","Box","Typography","Table","TableHead","TableBody","TableRow","TableCell","Paper","jsx","_jsx","jsxs","_jsxs","Attachments","files","setFiles","handleFileUpload","event","file","target","name","size","type","children","accept","style","display","id","onChange","htmlFor","variant","color","component","length","marginTop","padding","map","index"],"sources":["/home/user/projects/ReactReimbursement/reimModule/src/pages/Attachments.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Box, Typography, Table, TableHead, TableBody, TableRow, TableCell, Paper } from \"@material-ui/core\";\n\nconst Attachments = () => {\n  const [files, setFiles] = useState([]);\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Add the new file to the files array\n      setFiles([...files, { name: file.name, size: file.size, type: file.type }]);\n    }\n  };\n\n  return (\n    <Box>\n      {/* File Upload Input */}\n      <input\n        accept=\"*/*\"\n        style={{ display: \"none\" }}\n        id=\"file-upload\"\n        type=\"file\"\n        onChange={handleFileUpload}\n      />\n      <label htmlFor=\"file-upload\">\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\n          Upload File\n        </Button>\n      </label>\n\n      {/* Table to display uploaded file information */}\n      {files.length > 0 && (\n        <Paper style={{ marginTop: \"16px\" }}>\n          <Typography variant=\"h6\" style={{ padding: \"16px\" }}>\n            Uploaded Files\n          </Typography>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>File Name</TableCell>\n                <TableCell>File Size (bytes)</TableCell>\n                <TableCell>File Type</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {files.map((file, index) => (\n                <TableRow key={index}>\n                  <TableCell>{file.name}</TableCell>\n                  <TableCell>{file.size}</TableCell>\n                  <TableCell>{file.type}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default Attachments;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,MAAM,CAAEC,GAAG,CAAEC,UAAU,CAAEC,KAAK,CAAEC,SAAS,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,KAAK,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErH,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAiB,gBAAgB,CAAIC,KAAK,EAAK,CAClC,KAAM,CAAAC,IAAI,CAAGD,KAAK,CAACE,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC,CAClC,GAAII,IAAI,CAAE,CACR;AACAH,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAE,CAAEM,IAAI,CAAEF,IAAI,CAACE,IAAI,CAAEC,IAAI,CAAEH,IAAI,CAACG,IAAI,CAAEC,IAAI,CAAEJ,IAAI,CAACI,IAAK,CAAC,CAAC,CAAC,CAC7E,CACF,CAAC,CAED,mBACEV,KAAA,CAACX,GAAG,EAAAsB,QAAA,eAEFb,IAAA,UACEc,MAAM,CAAC,KAAK,CACZC,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAC3BC,EAAE,CAAC,aAAa,CAChBL,IAAI,CAAC,MAAM,CACXM,QAAQ,CAAEZ,gBAAiB,CAC5B,CAAC,cACFN,IAAA,UAAOmB,OAAO,CAAC,aAAa,CAAAN,QAAA,cAC1Bb,IAAA,CAACV,MAAM,EAAC8B,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,SAAS,CAACC,SAAS,CAAC,MAAM,CAAAT,QAAA,CAAC,aAE7D,CAAQ,CAAC,CACJ,CAAC,CAGPT,KAAK,CAACmB,MAAM,CAAG,CAAC,eACfrB,KAAA,CAACJ,KAAK,EAACiB,KAAK,CAAE,CAAES,SAAS,CAAE,MAAO,CAAE,CAAAX,QAAA,eAClCb,IAAA,CAACR,UAAU,EAAC4B,OAAO,CAAC,IAAI,CAACL,KAAK,CAAE,CAAEU,OAAO,CAAE,MAAO,CAAE,CAAAZ,QAAA,CAAC,gBAErD,CAAY,CAAC,cACbX,KAAA,CAACT,KAAK,EAAAoB,QAAA,eACJb,IAAA,CAACN,SAAS,EAAAmB,QAAA,cACRX,KAAA,CAACN,QAAQ,EAAAiB,QAAA,eACPb,IAAA,CAACH,SAAS,EAAAgB,QAAA,CAAC,WAAS,CAAW,CAAC,cAChCb,IAAA,CAACH,SAAS,EAAAgB,QAAA,CAAC,mBAAiB,CAAW,CAAC,cACxCb,IAAA,CAACH,SAAS,EAAAgB,QAAA,CAAC,WAAS,CAAW,CAAC,EACxB,CAAC,CACF,CAAC,cACZb,IAAA,CAACL,SAAS,EAAAkB,QAAA,CACPT,KAAK,CAACsB,GAAG,CAAC,CAAClB,IAAI,CAAEmB,KAAK,gBACrBzB,KAAA,CAACN,QAAQ,EAAAiB,QAAA,eACPb,IAAA,CAACH,SAAS,EAAAgB,QAAA,CAAEL,IAAI,CAACE,IAAI,CAAY,CAAC,cAClCV,IAAA,CAACH,SAAS,EAAAgB,QAAA,CAAEL,IAAI,CAACG,IAAI,CAAY,CAAC,cAClCX,IAAA,CAACH,SAAS,EAAAgB,QAAA,CAAEL,IAAI,CAACI,IAAI,CAAY,CAAC,GAHrBe,KAIL,CACX,CAAC,CACO,CAAC,EACP,CAAC,EACH,CACR,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}