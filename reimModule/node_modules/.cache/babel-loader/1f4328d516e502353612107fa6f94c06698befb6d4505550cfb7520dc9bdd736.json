{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";import{Button,Box,OutlinedInput,Select,MenuItem,TextField,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper}from\"@material-ui/core\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ReimbursementItems(_ref){let{reimItems,setItems,reimbursmentId,status,reimbursementDate,totalAmount,setTotalAmount,validationErrors}=_ref;const[nextItemId,setNextItemId]=useState(10);const reimbursementTypes=[\"Travel\",\"Meals\",\"Supplies\",\"Accommodation\"];const reimbursementTypeDefaults={Travel:500,Meals:200,Supplies:300,Accommodation:1000};const handleInputChange=(field,index,value)=>{const updatedItems=[...reimItems];updatedItems[index][field]=value;setItems(updatedItems);};const handleAddItem=()=>{const lastItemValue=reimItems.length>0?reimItems[reimItems.length-1].item:0;const newItem={id:nextItemId,item:Number(lastItemValue)+10||10,reimbursementType:\"\",reimbursementDate:\"\",amountToBeReimbursed:\"\",amountEligibleToClaim:\"\"};setItems(prevItems=>[...prevItems,newItem]);setNextItemId(prevId=>prevId+10);};const handleReimbursementTypeChange=(value,id)=>{const updatedItems=reimItems.map(item=>item.id===id?{...item,reimbursementType:value,amountEligibleToClaim:reimbursementTypeDefaults[value]}:item);setItems(updatedItems);};const handleAmountToBeReimbursedChange=(e,id)=>{const value=parseFloat(e.target.value)||0;const updatedItems=reimItems.map(item=>item.id===id?{...item,amountToBeReimbursed:value>item.amountEligibleToClaim?item.amountEligibleToClaim// Set to eligible amount if input exceeds it\n:value}:item);setItems(updatedItems);calculateTotalAmount(updatedItems);};const calculateTotalAmount=items=>{const total=items.reduce((sum,item)=>sum+(Number(item.amountToBeReimbursed)||0),0);setTotalAmount(total);};const handleReimbursementDateChange=(e,id)=>{const updatedItems=reimItems.map(item=>item.id===id?{...item,reimbursementDate:e.target.value}:item);setItems(updatedItems);};return/*#__PURE__*/_jsxs(Box,{py:5,children:[/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Item\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Reimbursement Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Reimbursement Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Amount To Be Reimbursed\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Amount Eligible To Claim\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:reimItems.map(item=>/*#__PURE__*/_jsxs(TableRow,{className:\"custom-table-row\",children:[/*#__PURE__*/_jsx(TableCell,{className:\"custom-table-cell\",style:{width:'auto',whiteSpace:'nowrap'},children:item.item}),/*#__PURE__*/_jsx(TableCell,{className:\"custom-table-cell\",style:{width:'auto',whiteSpace:'nowrap'},children:/*#__PURE__*/_jsx(Select,{value:item.reimbursementType||\"\",onChange:e=>handleReimbursementTypeChange(e.target.value,item.id),children:reimbursementTypes.map(type=>/*#__PURE__*/_jsx(MenuItem,{value:type,children:type},type))})}),/*#__PURE__*/_jsx(TableCell,{className:\"custom-table-cell\",style:{width:'auto',whiteSpace:'nowrap'},children:/*#__PURE__*/_jsx(TextField,{type:\"date\",value:item.reimbursementDate||\"\",onChange:e=>handleReimbursementDateChange(e,item.id),className:\"editable-cell\",InputLabelProps:{shrink:true},error:!!validationErrors[`item-${item.id}-reimbursementDate`],helperText:validationErrors[`item-${item.id}-reimbursementDate`]})}),/*#__PURE__*/_jsx(TableCell,{className:\"custom-table-cell\",style:{width:'auto',whiteSpace:'nowrap'},children:/*#__PURE__*/_jsx(OutlinedInput,{value:item.amountToBeReimbursed||\"\",onChange:e=>handleAmountToBeReimbursedChange(e,item.id),placeholder:\"Amount to be reimbursed\",className:\"editable-cell\",error:!!validationErrors[`item-${item.id}-amountToBeReimbursed`],\"aria-describedby\":`item-${item.id}-amountToBeReimbursed-error`})}),/*#__PURE__*/_jsx(TableCell,{children:item.amountEligibleToClaim})]},item.id))})]})}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",onClick:handleAddItem,style:{marginTop:\"16px\"},children:\"Add Item\"})]});}","map":{"version":3,"names":["React","useEffect","useRef","useState","Button","Box","OutlinedInput","Select","MenuItem","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsx","_jsx","jsxs","_jsxs","ReimbursementItems","_ref","reimItems","setItems","reimbursmentId","status","reimbursementDate","totalAmount","setTotalAmount","validationErrors","nextItemId","setNextItemId","reimbursementTypes","reimbursementTypeDefaults","Travel","Meals","Supplies","Accommodation","handleInputChange","field","index","value","updatedItems","handleAddItem","lastItemValue","length","item","newItem","id","Number","reimbursementType","amountToBeReimbursed","amountEligibleToClaim","prevItems","prevId","handleReimbursementTypeChange","map","handleAmountToBeReimbursedChange","e","parseFloat","target","calculateTotalAmount","items","total","reduce","sum","handleReimbursementDateChange","py","children","component","className","style","width","whiteSpace","onChange","type","InputLabelProps","shrink","error","helperText","placeholder","variant","color","onClick","marginTop"],"sources":["/home/user/projects/ReactReimbursement/reimModule/src/pages/ReimbursementItems.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button, Box, OutlinedInput, Select, MenuItem, TextField, Table, TableBody,\n  TableCell, TableContainer, TableHead, TableRow, Paper\n} from \"@material-ui/core\";\n\nexport default function ReimbursementItems({ reimItems, setItems, reimbursmentId, status, reimbursementDate, totalAmount, setTotalAmount, validationErrors }) {\n  const [nextItemId, setNextItemId] = useState(10);\n\n  const reimbursementTypes = [\"Travel\", \"Meals\", \"Supplies\", \"Accommodation\"];\n  const reimbursementTypeDefaults = {\n    Travel: 500,\n    Meals: 200,\n    Supplies: 300,\n    Accommodation: 1000,\n  };\n\n  const handleInputChange = (field, index, value) => {\n    const updatedItems = [...reimItems];\n    updatedItems[index][field] = value;\n    setItems(updatedItems);\n  };\n\n  const handleAddItem = () => {\n    const lastItemValue = reimItems.length > 0 ? reimItems[reimItems.length - 1].item : 0;\n    const newItem = {\n      id: nextItemId,\n      item: Number(lastItemValue) + 10 || 10,\n      reimbursementType: \"\",\n      reimbursementDate: \"\",\n      amountToBeReimbursed: \"\",\n      amountEligibleToClaim: \"\"\n    };\n    setItems(prevItems => [...prevItems, newItem]);\n    setNextItemId(prevId => prevId + 10);\n\n  };\n\n  const handleReimbursementTypeChange = (value, id) => {\n    const updatedItems = reimItems.map(item =>\n      item.id === id\n        ? {\n          ...item,\n          reimbursementType: value,\n          amountEligibleToClaim: reimbursementTypeDefaults[value]\n        }\n        : item\n    );\n    setItems(updatedItems);\n  };\n\n  const handleAmountToBeReimbursedChange = (e, id) => {\n    const value = parseFloat(e.target.value) || 0;\n    const updatedItems = reimItems.map(item =>\n      item.id === id\n        ? {\n          ...item,\n          amountToBeReimbursed: value > item.amountEligibleToClaim\n            ? item.amountEligibleToClaim  // Set to eligible amount if input exceeds it\n            : value\n        }\n        : item\n    );\n\n    setItems(updatedItems);\n    calculateTotalAmount(updatedItems);\n  };\n\n  const calculateTotalAmount = (items) => {\n    const total = items.reduce((sum, item) => sum + (Number(item.amountToBeReimbursed) || 0), 0);\n    setTotalAmount(total);\n  };\n\n  const handleReimbursementDateChange = (e, id) => {\n    const updatedItems = reimItems.map(item =>\n      item.id === id\n        ? { ...item, reimbursementDate: e.target.value }\n        : item\n    );\n    setItems(updatedItems);\n  };\n\n  \n\n  return (\n\n    <Box py={5}>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Item</TableCell>\n              <TableCell>Reimbursement Type</TableCell>\n              <TableCell>Reimbursement Date</TableCell>\n              <TableCell>Amount To Be Reimbursed</TableCell>\n              <TableCell>Amount Eligible To Claim</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {reimItems.map((item) => (\n              <TableRow key={item.id} className=\"custom-table-row\">\n                <TableCell className=\"custom-table-cell\" style={{ width: 'auto', whiteSpace: 'nowrap' }}>\n                  {item.item}\n                </TableCell>\n                <TableCell className=\"custom-table-cell\" style={{ width: 'auto', whiteSpace: 'nowrap' }}>\n                  <Select\n                    value={item.reimbursementType || \"\"}\n                    onChange={(e) => handleReimbursementTypeChange(e.target.value, item.id)}\n                  >\n                    {reimbursementTypes.map((type) => (\n                      <MenuItem key={type} value={type}>\n                        {type}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </TableCell>\n                <TableCell className=\"custom-table-cell\" style={{ width: 'auto', whiteSpace: 'nowrap' }}>\n                  <TextField\n                    type=\"date\"\n                    value={item.reimbursementDate || \"\"}\n                    onChange={(e) => handleReimbursementDateChange(e, item.id)}\n                    className=\"editable-cell\"\n                    InputLabelProps={{ shrink: true }}\n                    error={!!validationErrors[`item-${item.id}-reimbursementDate`]}\n                    helperText={validationErrors[`item-${item.id}-reimbursementDate`]}\n                  />\n                </TableCell>\n                <TableCell className=\"custom-table-cell\" style={{ width: 'auto', whiteSpace: 'nowrap' }}>\n                  <OutlinedInput\n                    value={item.amountToBeReimbursed || \"\"}\n                    onChange={(e) => handleAmountToBeReimbursedChange(e, item.id)}\n                    placeholder=\"Amount to be reimbursed\"\n                    className=\"editable-cell\"\n                    error={!!validationErrors[`item-${item.id}-amountToBeReimbursed`]}\n                    aria-describedby={`item-${item.id}-amountToBeReimbursed-error`}\n                  />\n                </TableCell>\n                <TableCell>{item.amountEligibleToClaim}</TableCell>\n              </TableRow>\n\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleAddItem} style={{ marginTop: \"16px\" }}>\n        Add Item\n      </Button>\n    </Box>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}