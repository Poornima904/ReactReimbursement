{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Container,Box,Toolbar,Button,Typography,TextField}from\"@material-ui/core\";import{DataGrid}from\"@mui/x-data-grid\";// Updated import for DataGrid\nimport{getTableData,getTableCount}from\"api\";// Ensure this path is correct\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const columns=[{field:\"reimbursmentId\",headerName:\"Reimbursement ID\",width:250},{field:\"reimbursementDate\",headerName:\"Reimbursement Date\",flex:1},{field:\"totalAmount\",headerName:\"Total Amount\",flex:1}];const PAGE_SIZE=15;export default function MasterPage(){const[items,setItems]=useState([]);const[loading,setLoading]=useState(false);const[rowCount,setRowCount]=useState(0);// Filter state\nconst[filterValues,setFilterValues]=useState({reimbursmentId:'',reimbursementDate:'',totalAmount:''});const loadData=async function(isFirstLoad){let skip=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;let filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};try{setLoading(true);if(isFirstLoad){const count=await getTableCount();setRowCount(count);}const _items=await getTableData({$top:PAGE_SIZE,$skip:skip,...filters// Add filters to the request\n});const itemsWithIds=_items.map((item,index)=>({...item,id:index+skip// Ensure unique IDs across pages\n}));setItems(itemsWithIds);}catch(error){console.error(\"Error loading data:\",error);// Optionally, set an error state here to display a message to the user\n}finally{setLoading(false);}};const handlePageChanged=newPage=>{loadData(false,newPage*PAGE_SIZE,filterValues);// Pass current filters\n};const handleCreate=()=>{console.log(\"Add button clicked\");};const handleRefresh=()=>{loadData(true,0,filterValues);// Reload the first page with current filters\n};const handleFilterChange=e=>{const{name,value}=e.target;setFilterValues(prev=>({...prev,[name]:value}));};const handleApplyFilter=()=>{loadData(true,0,filterValues);// Reload the first page with new filters\n};useEffect(()=>{loadData(true);},[]);return/*#__PURE__*/_jsxs(Container,{disableGutters:true,children:[/*#__PURE__*/_jsx(Box,{mb:2,children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(TextField,{label:\"Reimbursement ID\",variant:\"outlined\",name:\"reimbursmentId\",value:filterValues.reimbursmentId,onChange:handleFilterChange,style:{marginRight:'8px'}}),/*#__PURE__*/_jsx(TextField,{label:\"Reimbursement Date\",variant:\"outlined\",name:\"reimbursementDate\",type:\"date\",value:filterValues.reimbursementDate,onChange:handleFilterChange,InputLabelProps:{shrink:true},style:{marginRight:'8px'}}),/*#__PURE__*/_jsx(TextField,{label:\"Total Amount\",variant:\"outlined\",name:\"totalAmount\",value:filterValues.totalAmount,onChange:handleFilterChange,style:{marginRight:'8px'}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleApplyFilter,children:\"Apply Filters\"})]})}),/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",style:{flex:1},children:\"Reimbursement Records\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleCreate,children:\"Create\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",onClick:handleRefresh,style:{marginLeft:'8px'},children:\"Refresh\"})]}),/*#__PURE__*/_jsx(Box,{height:\"80vh\",py:5,children:/*#__PURE__*/_jsx(DataGrid,{loading:loading,rows:items,columns:columns,pageSize:PAGE_SIZE,paginationMode:\"server\",rowCount:rowCount,onPageChange:handlePageChanged,pagination:true})})]});}","map":{"version":3,"names":["React","useEffect","useState","Container","Box","Toolbar","Button","Typography","TextField","DataGrid","getTableData","getTableCount","jsx","_jsx","jsxs","_jsxs","columns","field","headerName","width","flex","PAGE_SIZE","MasterPage","items","setItems","loading","setLoading","rowCount","setRowCount","filterValues","setFilterValues","reimbursmentId","reimbursementDate","totalAmount","loadData","isFirstLoad","skip","arguments","length","undefined","filters","count","_items","$top","$skip","itemsWithIds","map","item","index","id","error","console","handlePageChanged","newPage","handleCreate","log","handleRefresh","handleFilterChange","e","name","value","target","prev","handleApplyFilter","disableGutters","children","mb","label","variant","onChange","style","marginRight","type","InputLabelProps","shrink","color","onClick","marginLeft","height","py","rows","pageSize","paginationMode","onPageChange","pagination"],"sources":["/home/user/projects/ReactReimbursement/reimModule/src/pages/MasterPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Box, Toolbar, Button, Typography, TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\"; // Updated import for DataGrid\nimport { getTableData, getTableCount } from \"api\"; // Ensure this path is correct\n\nconst columns = [\n  { field: \"reimbursmentId\", headerName: \"Reimbursement ID\", width: 250 },\n  { field: \"reimbursementDate\", headerName: \"Reimbursement Date\", flex: 1 },\n  { field: \"totalAmount\", headerName: \"Total Amount\", flex: 1 },\n];\n\nconst PAGE_SIZE = 15;\n\nexport default function MasterPage() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [rowCount, setRowCount] = useState(0);\n  \n  // Filter state\n  const [filterValues, setFilterValues] = useState({\n    reimbursmentId: '',\n    reimbursementDate: '',\n    totalAmount: ''\n  });\n\n  const loadData = async (isFirstLoad, skip = 0, filters = {}) => {\n    try {\n      setLoading(true);\n      if (isFirstLoad) {\n        const count = await getTableCount();\n        setRowCount(count);\n      }\n\n      const _items = await getTableData({\n        $top: PAGE_SIZE,\n        $skip: skip,\n        ...filters // Add filters to the request\n      });\n\n      const itemsWithIds = _items.map((item, index) => ({\n        ...item,\n        id: index + skip // Ensure unique IDs across pages\n      }));\n\n      setItems(itemsWithIds);\n    } catch (error) {\n      console.error(\"Error loading data:\", error);\n      // Optionally, set an error state here to display a message to the user\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChanged = (newPage) => {\n    loadData(false, newPage * PAGE_SIZE, filterValues); // Pass current filters\n  };\n\n  const handleCreate = () => {\n    console.log(\"Add button clicked\");\n  };\n\n  const handleRefresh = () => {\n    loadData(true, 0, filterValues); // Reload the first page with current filters\n  };\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilterValues((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleApplyFilter = () => {\n    loadData(true, 0, filterValues); // Reload the first page with new filters\n  };\n\n  useEffect(() => {\n    loadData(true);\n  }, []);\n\n  return (\n    <Container disableGutters>\n      <Box mb={2}>\n        <Toolbar>\n          {/* Filter Bar */}\n          <TextField\n            label=\"Reimbursement ID\"\n            variant=\"outlined\"\n            name=\"reimbursmentId\"\n            value={filterValues.reimbursmentId}\n            onChange={handleFilterChange}\n            style={{ marginRight: '8px' }}\n          />\n          <TextField\n            label=\"Reimbursement Date\"\n            variant=\"outlined\"\n            name=\"reimbursementDate\"\n            type=\"date\"\n            value={filterValues.reimbursementDate}\n            onChange={handleFilterChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            style={{ marginRight: '8px' }}\n          />\n          <TextField\n            label=\"Total Amount\"\n            variant=\"outlined\"\n            name=\"totalAmount\"\n            value={filterValues.totalAmount}\n            onChange={handleFilterChange}\n            style={{ marginRight: '8px' }}\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={handleApplyFilter}>\n            Apply Filters\n          </Button>\n        </Toolbar>\n      </Box>\n      <Toolbar>\n        <Typography variant=\"h6\" style={{ flex: 1 }}>\n          Reimbursement Records\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleCreate}>\n          Create\n        </Button>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleRefresh} style={{ marginLeft: '8px' }}>\n          Refresh\n        </Button>\n      </Toolbar>\n      <Box height=\"80vh\" py={5}>\n        <DataGrid\n          loading={loading}\n          rows={items}\n          columns={columns}\n          pageSize={PAGE_SIZE}\n          paginationMode=\"server\"\n          rowCount={rowCount}\n          onPageChange={handlePageChanged}\n          pagination\n        />\n      </Box>\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}