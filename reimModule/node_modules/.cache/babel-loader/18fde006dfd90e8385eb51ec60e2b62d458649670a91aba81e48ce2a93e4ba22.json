{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Container,Box,Toolbar,Button,Typography,TextField}from\"@material-ui/core\";import{DataGrid}from\"@material-ui/data-grid\";import{getTableData,getTableCount}from\"api\";import{useNavigate}from\"react-router-dom\";// Import useNavigate\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const columns=[{field:\"reimbursmentId\",headerName:\"Reimbursment ID\",width:250},{field:\"reimbursementDate\",headerName:\"Reimbursement Date\",flex:1},{field:\"totalAmount\",headerName:\"Total Amount\",flex:1}];const PAGE_SIZE=15;export default function MasterPage(){const[items,setItems]=useState([]);const[loading,setLoading]=useState(false);const[rowCount,setRowCount]=useState(0);const[filterValues,setFilterValues]=useState({reimbursmentId:'',reimbursementDate:'',totalAmount:''});const navigate=useNavigate();// Initialize useNavigate\nconst loadData=async function(isFirstLoad){let skip=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;let filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};try{setItems([]);setLoading(true);if(isFirstLoad){const count=await getTableCount();setRowCount(count);}const _items=await getTableData({$top:PAGE_SIZE,$skip:skip,...filters});const itemsWithIds=_items.map((item,index)=>{item.id=index+skip;// Ensure unique IDs across pages\nreturn item;});setItems(itemsWithIds);}finally{setLoading(false);}};const handlePageChanged=_ref=>{let{page}=_ref;loadData(false,page*PAGE_SIZE,filterValues);};const handleRowClick=params=>{navigate(`/object/${params.row.reimbursmentId}`);// Navigate to the object page using reimbursmentId\n};const handleRefresh=()=>{loadData(true,0,filterValues);};useEffect(()=>{loadData(true);},[]);return/*#__PURE__*/_jsxs(Container,{disableGutters:true,children:[/*#__PURE__*/_jsx(Box,{mb:2,children:/*#__PURE__*/_jsx(Toolbar,{})}),/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",style:{flex:1},children:\"Reimbursement Records\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",children:\"Create\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",onClick:handleRefresh,style:{marginLeft:'8px'},children:\"Refresh\"})]}),/*#__PURE__*/_jsx(Box,{height:\"80vh\",py:5,children:/*#__PURE__*/_jsx(DataGrid,{loading:loading,rows:items,columns:columns,pageSize:PAGE_SIZE,paginationMode:\"server\",rowCount:rowCount,onPageChange:handlePageChanged,onRowClick:handleRowClick// Add this line to handle row clicks\n})})]});}","map":{"version":3,"names":["React","useEffect","useState","Container","Box","Toolbar","Button","Typography","TextField","DataGrid","getTableData","getTableCount","useNavigate","jsx","_jsx","jsxs","_jsxs","columns","field","headerName","width","flex","PAGE_SIZE","MasterPage","items","setItems","loading","setLoading","rowCount","setRowCount","filterValues","setFilterValues","reimbursmentId","reimbursementDate","totalAmount","navigate","loadData","isFirstLoad","skip","arguments","length","undefined","filters","count","_items","$top","$skip","itemsWithIds","map","item","index","id","handlePageChanged","_ref","page","handleRowClick","params","row","handleRefresh","disableGutters","children","mb","variant","style","color","onClick","marginLeft","height","py","rows","pageSize","paginationMode","onPageChange","onRowClick"],"sources":["/home/user/projects/ReactReimbursement/reimModule/src/pages/MasterPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Box, Toolbar, Button, Typography, TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { getTableData, getTableCount } from \"api\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\n\nconst columns = [\n  { field: \"reimbursmentId\", headerName: \"Reimbursment ID\", width: 250 },\n  { field: \"reimbursementDate\", headerName: \"Reimbursement Date\", flex: 1 },\n  { field: \"totalAmount\", headerName: \"Total Amount\", flex: 1 },\n];\n\nconst PAGE_SIZE = 15;\n\nexport default function MasterPage() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [rowCount, setRowCount] = useState(0);\n  const [filterValues, setFilterValues] = useState({\n    reimbursmentId: '',\n    reimbursementDate: '',\n    totalAmount: ''\n  });\n\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const loadData = async (isFirstLoad, skip = 0, filters = {}) => {\n    try {\n      setItems([]);\n      setLoading(true);\n\n      if (isFirstLoad) {\n        const count = await getTableCount();\n        setRowCount(count);\n      }\n\n      const _items = await getTableData({\n        $top: PAGE_SIZE,\n        $skip: skip,\n        ...filters\n      });\n      const itemsWithIds = _items.map((item, index) => {\n        item.id = index + skip; // Ensure unique IDs across pages\n        return item;\n      });\n      setItems(itemsWithIds);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChanged = ({ page }) => {\n    loadData(false, page * PAGE_SIZE, filterValues);\n  };\n\n  const handleRowClick = (params) => {\n    navigate(`/object/${params.row.reimbursmentId}`); // Navigate to the object page using reimbursmentId\n  };\n\n  const handleRefresh = () => {\n    loadData(true, 0, filterValues);\n  };\n\n  useEffect(() => {\n    loadData(true);\n  }, []);\n\n  return (\n    <Container disableGutters>\n      <Box mb={2}>\n        <Toolbar>\n          {/* Filter Bar (same as before) */}\n        </Toolbar>\n      </Box>\n      <Toolbar>\n        <Typography variant=\"h6\" style={{ flex: 1 }}>\n          Reimbursement Records\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\">\n          Create\n        </Button>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleRefresh} style={{ marginLeft: '8px' }}>\n          Refresh\n        </Button>\n      </Toolbar>\n      <Box height=\"80vh\" py={5}>\n        <DataGrid\n          loading={loading}\n          rows={items}\n          columns={columns}\n          pageSize={PAGE_SIZE}\n          paginationMode=\"server\"\n          rowCount={rowCount}\n          onPageChange={handlePageChanged}\n          onRowClick={handleRowClick} // Add this line to handle row clicks\n        />\n      </Box>\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}