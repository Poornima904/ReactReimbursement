{"ast":null,"code":"import React,{createContext,useContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const AttachmentContext=/*#__PURE__*/createContext();export const useAttachmentContext=()=>useContext(AttachmentContext);export const AttachmentProvider=_ref=>{let{children}=_ref;const[attachments,setAttachments]=useState([]);const handleAttachments=async(reimbursmentId,files)=>{if(!files||files.length===0)return;try{for(const file of files){const uploadPayload={reimbursmentId,mediaType:file.mediaType,fileName:file.fileName,size:file.size,content:file.content};console.log(\"Uploading file:\",uploadPayload);const uploadResponse=await postAttachment(uploadPayload);console.log(\"Upload Response:\",uploadResponse);const id=uploadResponse.ID;if(!id){console.error(\"Failed to get ID from upload response for file:\",file);continue;}console.log(\"File ID received:\",id);const updatePayload={url:`/odata/v4/my/Files(${id})/content`};console.log(\"Updating file with ID:\",id,\"Payload:\",updatePayload);const updateResponse=await updateAttachments(id,updatePayload);console.log(\"Attachment updated successfully:\",updateResponse);}console.log(\"All files processed successfully.\");}catch(error){console.error(\"Error while handling attachments:\",error);}};return/*#__PURE__*/_jsx(AttachmentContext.Provider,{value:{handleAttachments,attachments,setAttachments},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","AttachmentContext","useAttachmentContext","AttachmentProvider","_ref","children","attachments","setAttachments","handleAttachments","reimbursmentId","files","length","file","uploadPayload","mediaType","fileName","size","content","console","log","uploadResponse","postAttachment","id","ID","error","updatePayload","url","updateResponse","updateAttachments","Provider","value"],"sources":["/home/user/projects/ReactReimbursement/reimModule/src/contexts/AttachmentContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n\n\nconst AttachmentContext = createContext();\n\nexport const useAttachmentContext = () => useContext(AttachmentContext);\n\nexport const AttachmentProvider = ({ children }) => {\n  const [attachments, setAttachments] = useState([]);\n\n  const handleAttachments = async (reimbursmentId, files) => {\n    if (!files || files.length === 0) return;\n\n    try {\n      for (const file of files) {\n        const uploadPayload = {\n          reimbursmentId,\n          mediaType: file.mediaType,\n          fileName: file.fileName,\n          size: file.size,\n          content: file.content,\n        };\n\n        console.log(\"Uploading file:\", uploadPayload);\n\n        const uploadResponse = await postAttachment(uploadPayload);\n        console.log(\"Upload Response:\", uploadResponse);\n\n        const id = uploadResponse.ID;\n        if (!id) {\n          console.error(\"Failed to get ID from upload response for file:\", file);\n          continue;\n        }\n\n        console.log(\"File ID received:\", id);\n\n        const updatePayload = {\n          url: `/odata/v4/my/Files(${id})/content`,\n        };\n\n        console.log(\"Updating file with ID:\", id, \"Payload:\", updatePayload);\n\n        const updateResponse = await updateAttachments(id, updatePayload);\n        console.log(\"Attachment updated successfully:\", updateResponse);\n      }\n\n      console.log(\"All files processed successfully.\");\n    } catch (error) {\n      console.error(\"Error while handling attachments:\", error);\n    }\n  };\n\n  return (\n    <AttachmentContext.Provider value={{ handleAttachments, attachments, setAttachments }}>\n      {children}\n    </AttachmentContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAGnE,KAAM,CAAAC,iBAAiB,cAAGL,aAAa,CAAC,CAAC,CAEzC,MAAO,MAAM,CAAAM,oBAAoB,CAAGA,CAAA,GAAML,UAAU,CAACI,iBAAiB,CAAC,CAEvE,MAAO,MAAM,CAAAE,kBAAkB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7C,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAElD,KAAM,CAAAU,iBAAiB,CAAG,KAAAA,CAAOC,cAAc,CAAEC,KAAK,GAAK,CACzD,GAAI,CAACA,KAAK,EAAIA,KAAK,CAACC,MAAM,GAAK,CAAC,CAAE,OAElC,GAAI,CACF,IAAK,KAAM,CAAAC,IAAI,GAAI,CAAAF,KAAK,CAAE,CACxB,KAAM,CAAAG,aAAa,CAAG,CACpBJ,cAAc,CACdK,SAAS,CAAEF,IAAI,CAACE,SAAS,CACzBC,QAAQ,CAAEH,IAAI,CAACG,QAAQ,CACvBC,IAAI,CAAEJ,IAAI,CAACI,IAAI,CACfC,OAAO,CAAEL,IAAI,CAACK,OAChB,CAAC,CAEDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEN,aAAa,CAAC,CAE7C,KAAM,CAAAO,cAAc,CAAG,KAAM,CAAAC,cAAc,CAACR,aAAa,CAAC,CAC1DK,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEC,cAAc,CAAC,CAE/C,KAAM,CAAAE,EAAE,CAAGF,cAAc,CAACG,EAAE,CAC5B,GAAI,CAACD,EAAE,CAAE,CACPJ,OAAO,CAACM,KAAK,CAAC,iDAAiD,CAAEZ,IAAI,CAAC,CACtE,SACF,CAEAM,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEG,EAAE,CAAC,CAEpC,KAAM,CAAAG,aAAa,CAAG,CACpBC,GAAG,CAAE,sBAAsBJ,EAAE,WAC/B,CAAC,CAEDJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEG,EAAE,CAAE,UAAU,CAAEG,aAAa,CAAC,CAEpE,KAAM,CAAAE,cAAc,CAAG,KAAM,CAAAC,iBAAiB,CAACN,EAAE,CAAEG,aAAa,CAAC,CACjEP,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEQ,cAAc,CAAC,CACjE,CAEAT,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAClD,CAAE,MAAOK,KAAK,CAAE,CACdN,OAAO,CAACM,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CAC3D,CACF,CAAC,CAED,mBACExB,IAAA,CAACC,iBAAiB,CAAC4B,QAAQ,EAACC,KAAK,CAAE,CAAEtB,iBAAiB,CAAEF,WAAW,CAAEC,cAAe,CAAE,CAAAF,QAAA,CACnFA,QAAQ,CACiB,CAAC,CAEjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}